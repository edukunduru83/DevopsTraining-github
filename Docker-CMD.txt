Basic commands:
	* To list the docker client and server version
		docker version
	*Docker version
		docker --version or docker -v
	* Login to Docker hub
		docker login
	

Images- Docker images are templates used to run docker containers. Container

Images:
	* List the docker images
		docker images
	*To pull the images from docker hub
		docker pull image_name
	*To remove the image
		docker rmi image_name
	*Run container out of image
		docker run image_name

Container: Containers are running instances of images

	* To list the containers
		docker ps
	* To run a container
		docker run container_name
		ex:sudo docker run ubuntu (If you dont have this container or image it will pull from docker hub once you ran this command but container wont run
		by default)
	*To run the container in interactive mode
		docker run -it container_name
		ex:sudo docker run -it ubuntu (which will login to ubuntu now after executing this)
	* To stop the container
		docker stop
	*To start the container
		docker start
	*To Pause or unpause container
		docker pause
		docker unpause
	*To list top process id of containers
		docker top container_id
	*To check the memory usage
		docker stats container_id
	*To attch container (you can be inside of contianer and execute other commands)
		docker attach container_id
	* To kill container
		docker kill container_id
	*To remove container
		docker rm container_id


System:
	*To check the memeory usage etc
		docker stats
	*To check the disk usage
		docker system df
	*To remove the containers images etc
		docker system prune










=======================================================================================================
How to run Jenkins on Docker Container:
=====================================

* Pull the Jenkins from docker hub
	docker pull jenkins

01b98a81eba84c92ad94f4ac14504e6a
a41b4afdb1904e18ac81a317befa4f66

	docker run --name MyJenkins2 -p 8080:8080 -l 50000:50000 -v /home/ubuntu:/var/Jenkins_Home jenkins
docker run --name MyJenkins2 -p 8080:8080 -l 50000:50000 -v Jenkins:/var/Jenkins_Home jenkins

*************************************************************
* Docker File: Docker file is a text file used to create docker images.
	*Docker file name Dockerfile (by default when you run docker build command docker looks for file called Dockerfile but you change this behaviour by changing
	some config
	
*Your dockerfile always starts with FROM keyword
ex:	FROM ubuntu (here ubuntu is the image name)
	FROM scratch(scratch is also a another image from docker hub- its an empty image)

*MAINTAINER edu <kunduru7hills@gmail.com> (this is optional but best practice to add maintainer name of the image)

*RUN (what you want to execute during building of image)
ex: RUN apt-get update

*CMD (something you want to run once you are running the container)
ex: CMD ["echo', "Hello World .. This is my first message from docker image"]

complete file will look like this:

FROM ubuntu
MAINTAINER edu <kunduru7hills@gmail.com>
RUN sudo apt-get update
CMD ["echo", "Hello World.. This is my first message from docker image"]

* once your file is ready and created .. you can build your docker file
	docker build "directory name where your Dockerfile exists"
	ex:docker build /home/ubuntu/DockerFiles/Dockerfile

*docker build -t myimage0:t1.0 /home/ubuntu/DockerFiles (to create tags to my images)

*once image is created run the image
	docker run imageid (which will create a container and you can check this using docker ps -a)

==================================================================================
Docker Compose: Tool for defining multi container docker applicaitons. Used Yaml file to configure application services. with a single command you can 
up and down all the services.easy to scale up selected services when required.

 *Install Docker compose
	check "docker-compose -v"

*Create Docker-compose file (standar name is docker-compose.yml)
File will be looking something like this:

Services:
	
	web:
		image:nginx
	database:
		image:redis


* Check the validity of the file by running command
	docker-compose config

*run the docker compose file
	docker-comnpose up -d (using -d to run the contianer as detached mode -- it will create container running all my services)
*to stop the services
	docker-compose down (assuming you are in docker compose file directory)
*to up the services
	docker-compose up (assuming you are in docker compose file directory)

*Scale up services
	docker-compose up -d --scale database=4




====================================================================================

Docker Volumes:

	*Volumes are preferred mechanism for persistant data generated by and used by containers.
uses:	Decoupling container from storage
	When delete the container still data will be availble
	sharing volumes (data) between container
	Attach voulme to container
 